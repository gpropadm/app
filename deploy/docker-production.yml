version: '3.8'

services:
  # Banco de Dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: crm-postgres-prod
    environment:
      POSTGRES_DB: crm_imobiliario
      POSTGRES_USER: ${POSTGRES_USER:-crm_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-backup:/backup
    networks:
      - crm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-crm_user}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis para cache
  redis:
    image: redis:7-alpine
    container_name: crm-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - crm-network
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}

  # Aplicação Next.js
  app:
    build:
      context: ..
      dockerfile: Dockerfile
      args:
        BUILD_STANDALONE: "true"
    container_name: crm-app-prod
    environment:
      NODE_ENV: production
      DATABASE_URL: "postgresql://${POSTGRES_USER:-crm_user}:${POSTGRES_PASSWORD}@postgres:5432/crm_imobiliario"
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      EMAIL_SERVICE_API_KEY: ${EMAIL_SERVICE_API_KEY}
      WHATSAPP_API_KEY: ${WHATSAPP_API_KEY}
      BOLETO_API_KEY: ${BOLETO_API_KEY}
      REDIS_URL: "redis://:${REDIS_PASSWORD}@redis:6379"
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - crm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Nginx para proxy reverso
  nginx:
    image: nginx:alpine
    container_name: crm-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - crm-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  crm-network:
    driver: bridge